
package com.operator.card.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CreditCardService", targetNamespace = "http://ws.card.operator.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CreditCardService {


    /**
     * 
     * @param parcelas
     * @param cartao
     * @param valor
     * @return
     *     returns boolean
     * @throws MissingDataException_Exception
     * @throws EmptyCreditCardData_Exception
     * @throws InvalidPriceException_Exception
     * @throws InvalidTimesException_Exception
     * @throws InvalidCreditCardData_Exception
     * @throws CreditCardNotValid_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "authorize", targetNamespace = "http://ws.card.operator.com/", className = "com.operator.card.ws.Authorize")
    @ResponseWrapper(localName = "authorizeResponse", targetNamespace = "http://ws.card.operator.com/", className = "com.operator.card.ws.AuthorizeResponse")
    @Action(input = "http://ws.card.operator.com/CreditCardService/authorizeRequest", output = "http://ws.card.operator.com/CreditCardService/authorizeResponse", fault = {
        @FaultAction(className = MissingDataException_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/MissingDataException"),
        @FaultAction(className = InvalidCreditCardData_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/InvalidCreditCardData"),
        @FaultAction(className = EmptyCreditCardData_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/EmptyCreditCardData"),
        @FaultAction(className = CreditCardNotValid_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/CreditCardNotValid"),
        @FaultAction(className = InvalidPriceException_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/InvalidPriceException"),
        @FaultAction(className = InvalidTimesException_Exception.class, value = "http://ws.card.operator.com/CreditCardService/authorize/Fault/InvalidTimesException")
    })
    public boolean authorize(
        @WebParam(name = "cartao", targetNamespace = "")
        CreditCard cartao,
        @WebParam(name = "valor", targetNamespace = "")
        double valor,
        @WebParam(name = "parcelas", targetNamespace = "")
        int parcelas)
        throws CreditCardNotValid_Exception, EmptyCreditCardData_Exception, InvalidCreditCardData_Exception, InvalidPriceException_Exception, InvalidTimesException_Exception, MissingDataException_Exception
    ;

}
